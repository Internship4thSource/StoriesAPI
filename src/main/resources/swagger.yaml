---
swagger: "2.0"
info:
  description: "Official documentation for Stories AP"
  version: "0.0.1"
  title: "Stories API"
  contact:
    url: "http://stories-qa.us-east-2.elasticbeanstalk.com"
tags:
- name: "Microservices STORY"
paths:
  /stories/:
    get:
      tags:
      - "Microservices STORY"
      summary: " GET Stories "
      description: " This operation will return a list of stories "
      operationId: "getAllStories"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: " Success operation "
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StoryDomain"
    post:
      tags:
      - "Microservices STORY"
      summary: " POST Story "
      description: " This operation will add a story "
      operationId: "createStory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/StoryDomain"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        201:
          description: " Success operation "
        400:
          description: " Story has an invalid status Json "
  /stories/{id}:
    get:
      tags:
      - "Microservices STORY"
      summary: " GET Story "
      description: " This operation will return a of story "
      operationId: "getStoryById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: " Success operation "
          schema:
            $ref: "#/definitions/StoryDomain"
        404:
          description: " Story not found "
    put:
      tags:
      - "Microservices STORY"
      summary: " PUT Story "
      description: " This operation will update a story "
      operationId: "updateStory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/StoryDomain"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/StoryDomain"
        202:
          description: " Success operation "
        400:
          description: " Malformed JSON request "
        404:
          description: " Story not found "
    delete:
      tags:
      - "Microservices STORY"
      summary: " DELETE Story "
      description: " This operation will delete a story "
      operationId: "deleteStory"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        204:
          description: " Success operation "
        404:
          description: " Status json state is invalid\", \"The status should be: Ready\
            \ to Work, Working, Testing, Ready to Accept or Accepted "
definitions:
  StoryDomain:
    type: "object"
    properties:
      sprint_id:
        type: "string"
        example: "1"
        description: "Identifier of the sprint"
      technology:
        type: "string"
        example: "Java"
        description: "Technology used"
      name:
        type: "string"
        example: "Create new story"
        description: "Name of the story"
      description:
        type: "string"
        example: "Make new Stories"
        description: "Story description"
      acceptance_criteria:
        type: "string"
        example: "1"
        description: "Acceptance criteria of the story"
      points:
        type: "integer"
        format: "int32"
        example: 1
        description: "Points of the story"
        minimum: 1
      progress:
        type: "integer"
        format: "int32"
        example: 1
        description: "Progress of the story"
        minimum: 1
      status:
        type: "string"
        example: "Working"
        description: "Status of the story"
      notes:
        type: "string"
        example: "The first steps"
        description: "Notes of the story"
      comments:
        type: "string"
        example: "Research information in sure websites"
        description: "Comments of the story"
      start_date:
        type: "string"
        format: "date"
        example: "2020-08-25"
        description: "Start date of the story"
      due_date:
        type: "string"
        format: "date"
        example: "2020-08-25"
        description: "Due date of the story"
      priority:
        type: "string"
        example: "High"
        description: "Priority of the story"
      assignee_id:
        type: "string"
        example: "1"
        description: "Assignee id of the story"
      history:
        type: "array"
        example: "1"
        description: "The history of the story"
        items:
          type: "string"
